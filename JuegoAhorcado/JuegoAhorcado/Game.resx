<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFpaWlhaWlp3Wlpad1paWndaWlp3Wlpad1tb
        W1oAAAAAAAAAAAAAAABYWFggXFxcXgAAAAAAAAAAAAAAAAAAAABXV1cjW1tb5FtbW9NcXFyIXFxciFxc
        XJxcXFz4WlpaYwAAAABbW1stW1tb6FxcXIAAAAAAAAAAAAAAAAAAAAAAAAAAAFhYWDFcXFzqWlpaVQAA
        AABZWVkUW1tb71tbW+ZbW1toW1tb51tbW8hcXFyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAW1tbaFtb
        W/1aWlp6YGBgCFtbW/ZbW1uHW1tb/VpaWmNcXFyAXFxcgAAAAAAAAAAAAAAAAAAAAAAAAAAAW1tbYltb
        W+dcXFyQW1tb/VpaWn9aWlrtW1tb/VxcXIAAAAAAXFxcgFxcXIAAAAAAAAAAAAAAAAAAAAAAWlpaYFtb
        W/lbW1vrW1tb7VpaWulbW1v+W1tb/11dXYFaWloRXFxcGVtbW5VcXFyAAAAAAAAAAAAAAAAAAAAAAFxc
        XIBcXFyWXFxcGVpaWhFbW1uDW1tb/ltbW/9bW1vyW1tb7ltbW+tbW1v5WlpaYAAAAAAAAAAAAAAAAAAA
        AABcXFyAXFxcgAAAAABbW1ttW1tb/VtbW/BaWlqNW1tb/VtbW4NbW1vnW1tbYgAAAAAAAAAAAAAAAAAA
        AAAAAAAAXFxcgFxcXIBbW1tUW1tb/VtbW4xaWlr4SUlJB1lZWXtbW1v9W1tbaAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAFxcXIBbW1vPW1tb5VtbW3NbW1vgXFxc8ltbWw4AAAAAWVlZaltbW99eXl4eAAAAAAAA
        AAAAAAAAAAAAAAAAAABcXFyAW1tb4l5eXiYAAAAAXFxcZFpaWvhaWlqNWlpad1paWndbW1vJW1tb5FdX
        VyMAAAAAAAAAAAAAAAAAAAAAWlpaXVhYWCAAAAAAAAAAAAAAAABaWlpjXFxciFxcXIhcXFyIXFxciFxc
        XIhaWlppAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD//wAA//8AAOBzAAD3IwAA+xMAAPETAADgMwAAzAcAAMwP
        AADI3wAAxO8AAM5nAAD/BwAA//8AAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        /j/4/AAf+f4AD///////////////////////////
</value>
  </data>
</root>